aiyaController.controller('purchaseOrderController', [
  '$scope',
  '$ionicLoading',
  '$ionicScrollDelegate',
  'CommonUtil',
  'favoriteService',
  'orderService',
  'purchaseOrderService',
  '$state',
  function($scope,$ionicLoading, $ionicScrollDelegate, CommonUtil, favoriteService, orderService, purchaseOrderService, $state) {
    var pageNumber, pageSize;
    var resetModel = function () {
      $scope.hasMore = true;
      $scope.purchaseProducts = [];
      pageNumber = 1;
      pageSize = 5;
    };

    var loadMore = (function () {
      var pending = false;
      return function () {
        if(pending) return;
        pending = true;
        var getProductsPromise = purchaseOrderService.getProducts(pageNumber, pageSize, $scope.filter);
        var loadMorePromise = getProductsPromise.then(function (products) {
            if(!products.length) {
              $scope.hasMore = false;
            }else {
              _.each(products, function (p,i) {
                console.log(products);
                if(p.specificationValuesName == ''){
                  p.isHasSpecification = false;
                }else{
                  p.isHasSpecification = true;
                }
                if(p.image == ''){
                  p.isHasimage = false;
                }else {
                  p.isHasimage =true;
                }
                $scope.purchaseProducts.push(p);

                _.each($scope.purchaseProducts, function (p) {
                  p.isSelected = true;
                });
              });
              checkIsAllSelected();
              pageNumber++;
            }
          })
          .finally(function () {
            pending = false;
          });
        loadMorePromise.abort = getProductsPromise.abort;
        return loadMorePromise;
      };
    }());

    var checkIsAllSelected = function () {
      $scope.isAllSelected = $scope.purchaseProducts.length === _.filter($scope.purchaseProducts, {isSelected: true}).length;
    };

    //过滤条件
    $scope.filter = {
      isOutStock: false,
      keyword: ''
    };

    //加载更多
    $scope.loadMore = function () {
      loadMore().finally(function () {
        $scope.$broadcast('scroll.infiniteScrollComplete');
      });
    };

    //全选
    $scope.toggleSelectAll = function () {
      if($scope.isAllSelected) {
        _.each($scope.purchaseProducts, function (p) {
          p.isSelected = true;
        });
        purchaseOrderService.select($scope.purchaseProducts);
      } else {
        _.each($scope.purchaseProducts, function (p) {
          p.isSelected = false;
        });
        purchaseOrderService.unselect();
      }
    };

    //单选
    $scope.toggleSelectOne = function (product) {
      if(product.isSelected) {
        purchaseOrderService.select(product);
      } else {
        purchaseOrderService.unselect(product);
      }
      checkIsAllSelected();
    };

    //编辑数量
    $scope.changeNumber = function (product) {
      var product = {'productList':[{'productId': product.id,'quantity':product.quantity }]};
      //console.log(product);/
      purchaseOrderService.setQuantity(product);
      //console.log($scope.product.quantity);
    };

    //删除
    $scope.deleteProduct = function (products) {
      var selectedProducts = _.filter($scope.purchaseProducts, {isSelected: true});
      if(selectedProducts.length) {
        purchaseOrderService.removeProduct(selectedProducts)
          .then(function () {
            _.pullAllWith(products, selectedProducts, function (p1, p2) {
              return p1.id === p2.id;
            });
            purchaseOrderService.unselect(selectedProducts);
            checkIsAllSelected();

            CommonUtil.tip('删除成功');
          })
      }else {
        CommonUtil.tip('请选择要删除的商品');
      }
    };

    $scope.singleDelete = function(id){
      //console.log(id);
      purchaseOrderService.removeSingle(id)
        .then(function(){
          CommonUtil.tip('删除成功');
        },function(errMsg){
          CommonUtil.tip(errMsg);
        })
        .finally(function(){
            //loadMore()
            resetModel();
            loadMorePromise = loadMore();
          }
        );
    };

    //结算
    $scope.goOrderProcess = function(){
      var selectedProducts = _.filter($scope.purchaseProducts, {isSelected: true});
      console.log(selectedProducts);
      if(selectedProducts.length){
        var ids, quantitys;
        if(!angular.isArray(selectedProducts)){
          ids = [selectedProducts.id];
          quantitys = [selectedProducts.quantity];
        }else {
          ids = _.map(selectedProducts, 'id');
          quantitys = _.map(selectedProducts, 'quantity');
          ids = ids.join(',');
          quantitys = quantitys.join(',');
        }
        var product = {
          ids: ids,
          quantitys: quantitys
        };
        console.log(product);

        $state.go('orderOk', {productInfo:product});
      }else{
        CommonUtil.tip('请选择需要结算的商品');
      }

    };
    //库存检测
    var directBuyPrecheck = function(){
      var selectedProducts = _.filter($scope.purchaseProducts, {isSelected: true});
      var opt = {
        id: selectedProducts.id,
        directQuantity: selectedProducts.quantity
      }
      console.log(opt.id);
      return orderService.directBuyPrecheck(opt);
    };

    $scope.collectProduct = function(products){
      var selectedProducts = _.filter($scope.purchaseProducts, {isSelected: true});
      if(selectedProducts.length){
        favoriteService.addProduct(selectedProducts)
          .then(function(){
            _.pullAllWith(products, selectedProducts, function (p1, p2) {
              return p1.id === p2.id;
            });
            purchaseOrderService.unselect(selectedProducts);
            checkIsAllSelected();

            CommonUtil.tip('收藏成功');
          }, function(err){
            CommonUtil.tip(err);
          })
      }else {
        CommonUtil.tip('请选择要收藏的商品');
      }

    };

    //监听过滤条件
    $scope.$watch('filter.isOutStock', function (newValue, oldValue) {
      if(newValue !== oldValue) {
        resetModel();
        $ionicScrollDelegate.scrollTop();
      }
    });
    $scope.$watch('filter.keyword', function (newValue, oldValue) {
      if(newValue !== oldValue) {
        resetModel();
        $ionicScrollDelegate.scrollTop();
      }
    });

    //初始化
    //$scope.$on('$ionicView.enter', function(){
      var loadMorePromise;
      $ionicLoading.show();
      $scope.$on('$destroy', function () {
        loadMorePromise.abort();
        //if(timer){
        //  $timeout.cancel(timer);
        //}
      });

      //setTimeout(function(){
        $scope.state = purchaseOrderService.getState();
        resetModel();
        loadMorePromise = loadMore();
        loadMorePromise.then(function () {
          $scope.$broadcast('scroll.infiniteScrollComplete');
          $ionicLoading.hide();
        }, function (errorMsg) {
          CommonUtil.tip(errorMsg,2000);
        });
      //},300);
    //});

  }
]);
